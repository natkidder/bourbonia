<?xml version="1.0" encoding="UTF-8"?>
<project name="Court-Annotation"
				 basedir="."
				 xmlns:artifact="antlib:org.apache.maven.artifact.ant">

	<!-- Set up properties containing important project directories -->
	<property name="source.root" value="src"/>
	<property name="class.root" value="court/WEB-INF/classes"/>
	<property name="log.dir" value="log"/>
	<property name="build.dir" value="build"/>
	<property name="archive.dir" value="${build.dir}/war"/>
	<property name="deploy.dir" value="c:/tomcat/webapps"/>

	<artifact:dependencies pathid="dependency.class.path">
		<dependency groupid="mysql" artifactId="mysql-connector-java" version="5.0.5"/>
		<dependency groupId="org.hibernate" artifactId="hibernate" version="3.2.6.ga"> 
				<exclusion groupId="javax.transaction" artifactId="jta"/>
		</dependency>
		<dependency groupId="org.hibernate" artifactId="hibernate-tools" version="3.2.0.beta9a"/>
		<dependency groupId="org.hibernate" artifactId="hibernate-annotations" version="3.3.0.ga"/>
		<dependency groupId="org.hibernate" artifactId="hibernate-commons-annotations" version="3.3.0.ga"/>
		<dependency groupId="org.apache.geronimo.specs" artifactId="geronimo-jta_1.1_spec" version="1.1"/>
		<dependency groupId="log4j" artifactId="log4j" version="1.2.14"/>
	</artifact:dependencies>

	<!-- set up the class path for compilation and execution -->
	<path id="project.class.path">
		<!-- include our own classes, of course -->
		<pathelement location="${class.root}"/>
		<!-- add the dependencies classpath -->
		<path refid="dependency.class.path"/>
	</path>

	<taskdef name="hibernatetool" classname="org.hibernate.tool.ant.HibernateToolTask" classpathref="project.class.path"/>

	<!-- get all the archive files we will actually be referring to -->
	<target name="print-classpath" description="Show the dependency class path">
		<property name="class.path" refid="dependency.class.path"/>
		<echo>${class.path}</echo>
	</target>

<!--
	<target name="prepare" description="Sets up build structures">
		<mkdir dir="${class.root}"/>
		<copy todir="${class.root}">
			<fileset dir="${source.root}">
				<include name="**/*.properties"/>
				<include name="**/*.hbm.cfg"/>
				<include name="**/*.cfg.xml"/>
			</fileset>
		</copy>
		<mkdir dir="${log.dir}"/>
	</target>
-->

	<target name="cleanup">
		<delete dir="${build.dir}"/>
	</target>

	<!-- compile the java source -->
	<target name="compile">
		<javac srcdir="${source.root}" destdir="${class.root}" debug="on" optimize="off" deprecation="on">
			<classpath refid="project.class.path"/>
		</javac>
	</target>

	<!-- generate the database schema -->
	<target name="schema" depends="compile">
		<hibernatetool destdir="${source.root}">
			<classpath refid="project.class.path"/>
			<annotationconfiguration configurationfile="${source.root}/hibernate.cfg.xml"/>
			<hbm2ddl drop="yes"/>  <!--destroys before recreating: backup before running this target -->
		</hibernatetool>
	</target>

	<!-- Insert new rows -->
	<target name="insert" depends="compile">
		<java classname="web.Insert" fork="true" failonerror="true">
			<classpath refid="project.class.path"/>
		</java>
	</target>

	<target name="test" depends="compile">
		<java classname="web.Test" fork="true" failonerror="true">
			<classpath refid="project.class.path"/>
		</java>
	</target> 

	<target name="archive">
		<delete dir="${build.dir}"/>
		<mkdir dir="${archive.dir}"/>
		<jar destfile="${archive.dir}/${ant.project.name}.war" basedir="."/>
		<copy file="${archive.dir}/${ant.project.name}.war" todir="${deploy.dir}"/>
	</target>

	<target name="compile-clean-archive" depends="compile,cleanup,archive"/>

</project>
