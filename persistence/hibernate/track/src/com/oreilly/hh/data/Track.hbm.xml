<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
					"http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">

<hibernate-mapping>

	<class name="com.oreilly.hh.data.Track" table="TRACK">
		<meta attribute="class-description">
			Represents a single playable track in the music database.
			@author Jim Elliott (with help from Hibernate)
		</meta>

		<id name="id" type="int" column="TRACK_ID">
			<meta attribute="scope-set">protected</meta>
			<generator class="native"/>
		</id>

		<property name="title" type="string">
			<meta attribute="use-in-tostring">true</meta>
			<column name="TITLE" not-null="true" index="TRACK_TITLE"/>
		</property>

		<property name="filePath" type="string" not-null="true"/>

		<property name="playTime" type="time">
			<meta attribute="field-description">Playing time</meta>
		</property>

		<set name="artists" table="TRACK_ARTISTS">
			<key column="TRACK_ID"/>
			<many-to-many class="com.oreilly.hh.data.Artist" column="ARTIST_ID"/>
		</set>

		<property name="added" type="date">
			<meta attribute="field-description">When the track was created</meta>
		</property>

	<!-- volume is no longer a number but a composite type (object w/properties)
		<property name="volume" type="short" not-null="true">
			<meta attribute="field-description">How loud to play the track</meta>
		</property>
	-->

		<property name="volume" type="com.oreilly.hh.StereoVolumeType">
			<meta attribute="field-description">How loud to play the track, per stereo side</meta>
			<meta attribute="use-in-tostring">true</meta>
			<column name="VOL_LEFT"/>
			<column name="VOL_RIGHT"/>
		</property>
	
		<property name="sourceMedia" type="com.oreilly.hh.SourceMediaType">
			<meta attribute="field-description">Media on which track was obtained</meta>
			<meta attribute="use-in-tostring">true</meta>
		</property>
	
		<set name="comments" table="TRACK_COMMENTS">
			 <key column="TRACK_ID"/>
			 <element column="COMMENT" type="string"/>
		</set>

	</class>

	<query name="com.oreilly.hh.completeTracksNoLongerThan">
		<![CDATA[
			from com.oreilly.hh.data.Track as track
			where track.playTime <= :length
		]]>
	</query>

	<query name="com.oreilly.hh.tracksNoLongerThan">
		<![CDATA[
			SELECT track.id, track.title FROM com.oreilly.hh.data.Track AS track
			WHERE track.playTime <= :length
			ORDER BY track.title desc
	]]>
	</query>

	<query name="com.oreilly.hh.trackSummary">
		<![CDATA[
			SELECT count(*), min(track.playTime), max(track.playTime)
			FROM com.oreilly.hh.data.Track as track
		]]>
	</query>

	<query name="com.oreilly.hh.trackSummByArtist">
		<![CDATA[
			SELECT count(*), min(track.playTime), max(track.playTime)
			FROM com.oreilly.hh.data.Track as track
			WHERE :artist in elements(track.artists)
		]]>
	</query>

	<!-- frivilous example: return all tracks whose time is so many seconds after the last minute -->
	<sql-query name="com.oreilly.hh.tracksEndingAt">
		<return alias="track" class="com.oreilly.hh.data.Track"/>
		<![CDATA[
			SELECT {track.*}
			FROM TRACK AS {track}
			WHERE SECOND({track}.PLAYTIME) = :seconds
		]]>
	</sql-query>

</hibernate-mapping>
