server.port=8090

# Enabling H2 Console
#spring.h2.console.enabled=true
#Turn Statistics on
spring.jpa.properties.hibernate.generate_statistics=true
logging.level.org.hibernate.stat=debug
# Show all queries
#spring.jpa.show-sql=true
#spring.jpa.properties.hibernate.format_sql=true
logging.level.org.hibernate.type=trace
spring.data.jpa.repositories.bootstrap-mode=default

# for sqlite3
#spring.datasource.url=jdbc:sqlite:student.db
#spring.datasource.driver-class-name=org.sqlite.JDBC
#spring.jpa.database-platform=org.hibernate.dialect.SQLiteDialect
#spring.jpa.database-platform=org.sqlite.hibernate.dialect.SQLiteDialect

# for Postgresql
# Details for our datasource
# Find the port via SQL:  SELECT * FROM pg_settings WHERE name = 'port', also C:/projects/thirdPartyComponents/PostgreSQL/16/data/postgresql.conf   can try 5433
spring.datasource.url=jdbc:postgresql://localhost:5432/postgres
spring.datasource.username=postgres
spring.datasource.password=admin
spring.datasource.driver-class-name=org.postgresql.Driver
# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle=true
spring.datasource.validationQuery=SELECT 1

# Hibernate properties
#spring.jpa.database=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.show-sql=false
# possible values are: create, create-drop, validate and update  (only create-drop and update seem to work)
spring.jpa.hibernate.ddl-auto=update
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyJpaCompliantImpl
spring.jpa.properties.hibernate.format_sql=true
# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
 spring.jpa.properties.hibernate.connection.timeout=90